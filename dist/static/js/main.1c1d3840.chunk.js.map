{"version":3,"sources":["images/online-note-logo.png","components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notificationd.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/layout/FrontPage.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["module","exports","connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","id","header","trigger","profile","initials","firstName","lastName","email","href","options","closeOnClick","SignedOutLinks","titleStyle","fontSize","style","state","firebase","links","uid","fontFamily","textShadow","isLoaded","ProjectSummary","note","title","authorFirstName","authorLastName","moment","createdAt","toDate","format","ProjectList","notes","map","key","Notification","notifications","notification","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","console","log","history","push","SignIn","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","autoComplete","creds","credentials","signInWithEmailAndPassword","password","catch","err","SignUp","signUp","class","newUser","getFirestore","createUserWithEmailAndPassword","respond","doc","set","CreateProject","createProject","name","authorId","add","Date","FrontPage","margin","marginTop","position","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","artist","projectReducer","rootReducer","combineReducers","project","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableClaims","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"6JAAAA,EAAOC,QAAU,IAA0B,8C,4JC0C5BC,cAAQ,MANI,SAACC,GACxB,MAAO,CACHC,QAAS,kBAAMD,GCtBZ,SAACA,EAAUE,EAAX,IACaC,EAD0B,EAAjBA,eAGhBC,OAAOH,UAAUI,MAAK,WAC3BL,EAAS,CAACM,KAAM,8BDsBbP,EAnCO,SAACQ,GACnB,OACI,6BACI,wBAAIC,UAAU,8BACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,gBAAZ,oBACJ,4BAAI,uBAAGC,QAASH,EAAMN,SAAlB,YACJ,wBAAIU,GAAG,sBACH,kBAAC,QAAD,CAAOH,UAAU,SAASI,OAAO,eAAeC,QAAS,uBAAGJ,GAAG,IAAID,UAAU,oBAAoBD,EAAMO,QAAQC,WACvG,4CAAiB,0BAAMP,UAAU,qBAAqBD,EAAMO,QAAQE,UAAnD,IAA+DT,EAAMO,QAAQG,WAC9F,wBAAIT,UAAU,qBAAqBD,EAAMH,KAAKc,UAI9D,kBAAC,UAAD,CAAUL,QAAS,uBAAGM,KAAK,KAAI,uBAAGX,UAAU,qCAAb,SAA+DY,QAAS,CAAEC,cAAc,IACnH,4BACI,4BAAI,kBAAC,IAAD,CAASZ,GAAG,gBAAZ,oBACJ,4BAAI,uBAAGC,QAASH,EAAMN,SAAlB,YACJ,wBAAIU,GAAG,sBACH,kBAAC,QAAD,CAAOH,UAAU,SAASI,OAAO,eAAeC,QAAS,uBAAGJ,GAAG,IAAID,UAAU,oBAAoBD,EAAMO,QAAQC,WAC3G,4CAAiB,0BAAMP,UAAU,qBAAqBD,EAAMO,QAAQE,UAAnD,IAA+DT,EAAMO,QAAQG,WAC9F,wBAAIT,UAAU,qBAAqBD,EAAMH,KAAKc,eEC3DI,EAvBQ,WACnB,IAAMC,EAAW,CACbC,SAAU,QAEd,OACI,6BACI,wBAAIhB,UAAU,8BACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAU,0BAAMgB,MAAOF,GAAb,YAC1B,4BAAI,kBAAC,IAAD,CAASd,GAAG,WAAU,0BAAMgB,MAAOF,GAAb,cAG9B,kBAAC,UAAD,CAAUV,QAAS,uBAAGM,KAAK,KAAI,uBAAGX,UAAU,qCAAb,SAA+DY,QAAS,CAAEC,cAAc,IACnH,4BACI,4BAAI,kBAAC,IAAD,CAASZ,GAAG,WAAU,0BAAMgB,MAAOF,GAAb,YAC1B,4BAAI,kBAAC,IAAD,CAASd,GAAG,WAAU,0BAAMgB,MAAOF,GAAb,iBCqB/BxB,eAPS,SAAC2B,GACrB,MAAO,CACHtB,KAAMsB,EAAMC,SAASvB,KACrBU,QAASY,EAAMC,SAASb,WAIjBf,EAjCA,SAACQ,GAEZ,IAMOH,EAAiBG,EAAjBH,KAAMU,EAAWP,EAAXO,QAEPc,EAAQxB,EAAKyB,IAAM,kBAAC,EAAD,CAAef,QAASA,EAASV,KAAMA,IAAU,kBAAC,EAAD,MAC1E,OACI,yBAAKI,UAAU,gCACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,aAAaG,GAAG,cACnC,uBAAGH,UAAU,wBAAwBiB,MAAO,CAAC,SAAY,SAAzD,cACA,0BAAMA,MAdA,CAClBK,WAAY,4BACZN,SAAU,OACVO,WAAY,qBAWA,eAEH3B,EAAK4B,UACFJ,O,iBCXLK,EAZQ,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACrB,OACI,yBAAK1B,UAAU,QACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAc0B,EAAKC,OACnC,uCAAY,0BAAM3B,UAAU,qBAAqB0B,EAAKE,gBAA1C,IAA4DF,EAAKG,iBAC7E,2BAAIC,IAAOJ,EAAKK,UAAUC,UAAUC,OAAO,YCW5CC,EAfK,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAElB,OACI,yBAAKnC,UAAU,wBACVmC,GAASA,EAAMC,KAAI,SAAAV,GAChB,OACI,kBAAC,IAAD,CAAMzB,GAAI,YAAYyB,EAAKvB,GAAIkC,IAAKX,EAAKvB,IACrC,kBAAC,EAAD,CAAgBuB,KAAMA,UCiB/BY,EA1BM,SAACvC,GAAW,IACtBwC,EAAiBxC,EAAjBwC,cACP,OACI,yBAAKvC,UAAU,wBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,qBAAf,iBACA,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,iBACTuC,GAAiBA,EAAcH,KAAI,SAAAI,GAChC,OACI,wBAAIH,IAAKG,EAAarC,IAClB,0BAAMH,UAAU,YAAYwC,EAAaC,MACzC,kCAAQD,EAAaE,SACrB,6BACKZ,IAAOU,EAAaG,KAAKX,UAAUY,oB,gBCTtEC,E,iLACM,MAE+BC,KAAK/C,MAAjCoC,EAFH,EAEGA,MAAOvC,EAFV,EAEUA,KAAM2C,EAFhB,EAEgBA,cACpB,OAAI3C,EAAKyB,IAIL,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2BACX,kBAAC,EAAD,CAAamC,MAAOA,KAExB,yBAAKnC,UAAU,qCACX,kBAAC,EAAD,CAAcuC,cAAeA,OATlC,kBAAC,IAAD,CAAUtC,GAAG,U,GALR8C,aA8BTC,cACXzD,aAToB,SAAC2B,GACrB,MAAO,CACHiB,MAAOjB,EAAM+B,UAAUC,QAAQf,MAC/BvC,KAAMsB,EAAMC,SAASvB,KACrB2C,cAAerB,EAAM+B,UAAUC,QAAQX,kBAM3CY,2BAAiB,CACb,CAACC,WAAY,QAASC,QAAS,CAAC,YAAa,SAC7C,CAACD,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJnDL,CAMbH,GCSaG,cACXzD,aAVmB,SAAC2B,EAAOqC,GAC3B,IAAMpD,EAAKoD,EAASC,MAAMC,OAAOtD,GAC3BgC,EAAQjB,EAAM+B,UAAUS,KAAKvB,MAEnC,MAAO,CACHT,KAFSS,EAAQA,EAAMhC,GAAM,KAG7BP,KAAMsB,EAAMC,SAASvB,SAKzBuD,2BAAiB,CACb,CAACC,WAAY,WAHNJ,EA9CQ,SAACjD,GACpB4D,QAAQC,IAAI7D,GADkB,IAEvB2B,EAAc3B,EAAd2B,KACP,IADqB3B,EAARH,KACJyB,IAAK,OAAO,kBAAC,IAAD,CAAUpB,GAAG,YAMlC,OAAIyB,EAEI,yBAAK1B,UAAU,qBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAc0B,EAAKC,OACnC,2BAAID,EAAKgB,UAEb,yBAAK1C,UAAU,eACX,uCAAY,0BAAMA,UAAU,qBAAqB0B,EAAKE,gBAA1C,IAA4DF,EAAKG,iBAC7E,2BAAIC,IAAOJ,EAAKK,UAAUC,UAAUC,OAAO,WAGnD,yBAAKjC,UAAU,kBACX,4BAAQA,UAAU,+BAA+BE,QAlB7C,WAChBH,EAAM8D,QAAQC,KAAK,gBAiBP,IAAwE,uBAAG9D,UAAU,kBAAb,cAAxE,OAOR,yBAAKA,UAAU,oBACX,uD,QChCV+D,E,2MACF7C,MAAQ,CACJ,MAAS,GACT,SAAY,I,EAEhB8C,aAAc,SAACC,GACX,EAAKC,SAAL,eACKD,EAAEE,OAAOhE,GAAM8D,EAAEE,OAAOC,S,EAGjCC,aAAc,SAACJ,GACXA,EAAEK,iBACF,EAAKvE,MAAMwE,OAAO,EAAKrD,Q,wEAEjB,IAAD,EACmB4B,KAAK/C,MAAtByE,EADF,EACEA,UACP,OAFK,EACa5E,KACVyB,IAAa,kBAAC,IAAD,CAAUpB,GAAG,eAG1B,yBAAKD,UAAU,4BACX,0BAAMA,UAAU,kBAAkByE,SAAU3B,KAAKuB,cAC7C,sCACA,yBAAKrE,UAAU,eACX,uBAAGA,UAAU,yBAAb,SACA,2BAAO0E,QAAQ,SAAf,SACA,2BAAO5E,KAAK,QAAQK,GAAG,QAAQwE,SAAU7B,KAAKkB,aAAcY,aAAa,QAE7E,yBAAK5E,UAAU,eACX,uBAAGA,UAAU,yBAAb,QACA,2BAAO0E,QAAQ,YAAf,YACA,2BAAO5E,KAAK,WAAWK,GAAG,WAAWwE,SAAU7B,KAAKkB,aAAcY,aAAa,QAEnF,yBAAK5E,UAAU,4BACX,4BAAQA,UAAU,iDAAlB,QACI,uBAAGA,UAAU,kBAAb,UAGR,yBAAKA,UAAU,sCACVwE,EAAY,2BAAIA,GAAe,Y,GAtCvCzB,aA0DNxD,eAZS,SAAC2B,GACrB,MAAO,CACHsD,UAAWtD,EAAMtB,KAAK4E,UACtB5E,KAAMsB,EAAMC,SAASvB,SAIF,SAACJ,GACxB,MAAO,CACH+E,OAAQ,SAACM,GAAD,OAAWrF,GR7DJsF,EQ6DoBD,ER5DhC,SAACrF,EAAUE,EAAX,IACcC,EADyB,EAAjBA,eAGhBC,OAAOmF,2BACZD,EAAYpE,MACZoE,EAAYE,UACdnF,MAAK,WACHL,EAAS,CAACM,KAAM,qBACjBmF,OAAM,SAACC,GACN1F,EAAS,CAACM,KAAM,cAAeoF,IAAKA,UAV1B,IAACJ,MQgERvF,CAA6CwE,GC3DtDoB,E,2MACFjE,MAAQ,CACJ,MAAS,GACT,SAAY,GACZ,UAAa,GACb,SAAY,I,EAEhB8C,aAAc,SAACC,GACX,EAAKC,SAAL,eACKD,EAAEE,OAAOhE,GAAM8D,EAAEE,OAAOC,S,EAGjCC,aAAc,SAACJ,GACXA,EAAEK,iBACF,EAAKvE,MAAMqF,OAAO,EAAKlE,Q,wEAEjB,IAAD,EACmB4B,KAAK/C,MAAtBH,EADF,EACEA,KAAM4E,EADR,EACQA,UACb,OAAG5E,EAAKyB,IAAa,kBAAC,IAAD,CAAUpB,GAAG,eAG1B,yBAAKD,UAAU,4BACX,0BAAMA,UAAU,kBAAkByE,SAAU3B,KAAKuB,cAC7C,uCACA,yBAAKrE,UAAU,eACX,uBAAGqF,MAAM,yBAAT,kBACA,2BAAOX,QAAQ,aAAf,cACA,2BAAO5E,KAAK,OAAOK,GAAG,YAAYwE,SAAU7B,KAAKkB,aAAcY,aAAa,QAEhF,yBAAK5E,UAAU,eACX,uBAAGA,UAAU,yBAAb,0BACA,2BAAO0E,QAAQ,YAAf,aACA,2BAAO5E,KAAK,OAAOK,GAAG,WAAWwE,SAAU7B,KAAKkB,aAAcY,aAAa,QAE/E,yBAAK5E,UAAU,eACX,uBAAGA,UAAU,yBAAb,SACA,2BAAO0E,QAAQ,SAAf,SACA,2BAAO5E,KAAK,QAAQK,GAAG,QAAQwE,SAAU7B,KAAKkB,aAAcY,aAAa,QAE7E,yBAAK5E,UAAU,eACX,uBAAGA,UAAU,yBAAb,QACA,2BAAO0E,QAAQ,YAAf,YACA,2BAAO5E,KAAK,WAAWK,GAAG,WAAWwE,SAAU7B,KAAKkB,aAAcY,aAAa,QAEnF,yBAAK5E,UAAU,4BACX,4BAAQA,UAAU,iDAAlB,UACI,uBAAGA,UAAU,kBAAb,eAGR,yBAAKA,UAAU,sCACVwE,EAAY,2BAAIA,GAAiB,Y,GAlDzCzB,aAsENxD,eAXS,SAAC2B,GACrB,MAAO,CACHtB,KAAMsB,EAAMC,SAASvB,KACrB4E,UAAWtD,EAAMtB,KAAK4E,cAGJ,SAAChF,GACvB,MAAO,CACH4F,OAAS,SAACE,GAAD,OAAa9F,ET/CR,SAAC8F,GACnB,OAAO,SAAC9F,EAAUE,EAAX,GAAqD,IAA/BC,EAA8B,EAA9BA,YAAa4F,EAAiB,EAAjBA,aAChCpE,EAASxB,IACTsD,EAAUsC,IAEhBpE,EAASvB,OAAO4F,+BACZF,EAAQ5E,MACR4E,EAAQN,UACVnF,MAAK,SAAC4F,GACJ,OAAOxC,EAAUG,WAAW,SAASsC,IAAID,EAAQhD,KAAKpB,KAAKsE,IAAI,CAC3DnF,UAAW8E,EAAQ9E,UACnBC,SAAU6E,EAAQ7E,SAClBF,SAAU+E,EAAQ9E,UAAU,GAAG8E,EAAQ7E,SAAS,QAErDZ,MAAK,WACJL,EAAS,CAACM,KAAM,sBACjBmF,OAAM,SAACC,GACN1F,EAAS,CAACM,KAAM,eAAeoF,YS8BJE,CAAOE,QAG/B/F,CAA6C4F,G,QCtEtDS,E,2MACF1E,MAAQ,CACJ,MAAS,GACT,QAAW,I,EAEf8C,aAAc,SAACC,GACX,EAAKC,SAAL,eACKD,EAAEE,OAAOhE,GAAM8D,EAAEE,OAAOC,S,EAGjCC,aAAc,SAACJ,GACXA,EAAEK,iBAEF,EAAKvE,MAAM8F,cAAc,EAAK3E,OAC9B,EAAKnB,MAAM8D,QAAQC,KAAK,e,wEAIxB,OADahB,KAAK/C,MAAXH,KACEyB,IAIL,yBAAKrB,UAAU,aACX,0BAAMA,UAAU,QAAQyE,SAAU3B,KAAKuB,cACnC,+CACA,yBAAKrE,UAAU,eACX,2BAAO0E,QAAQ,SAAf,SACA,2BAAO5E,KAAK,OAAOK,GAAG,QAAQwE,SAAU7B,KAAKkB,aAAcY,aAAa,QAE5E,yBAAK5E,UAAU,eACX,2BAAO0E,QAAQ,WAAf,WACA,8BAAUoB,KAAK,UAAU3F,GAAG,UAAUH,UAAU,uBAAuB2E,SAAU7B,KAAKkB,gBAE1F,yBAAKhE,UAAU,4BACX,4BAAQA,UAAU,wBACd,uBAAGA,UAAU,kBAAb,UADJ,eAfL,kBAAC,IAAD,CAAUC,GAAG,gB,GAnBJ8C,aAyDbxD,eAZS,SAAC2B,GACrB,MAAO,CACHtB,KAAMsB,EAAMC,SAASvB,SAIF,SAACJ,GACxB,MAAO,CACHqG,cAAe,SAACnE,GAAD,OAAUlC,EC1DJ,SAACkC,GAC1B,OAAO,SAAClC,EAAUE,EAAX,GAAqD,EAA/BC,YAAgC,IAEnDsD,GAAYsC,EAFsC,EAAlBA,gBAGhCjF,EAAUZ,IAAWyB,SAASb,QAC9ByF,EAAWrG,IAAWyB,SAASvB,KAAKyB,IAC1C4B,EAAUG,WAAW,SAAS4C,IAA9B,eACOtE,EADP,CAEIE,gBAAiBtB,EAAQE,UACzBqB,eAAgBvB,EAAQG,SACxBsF,SAAUA,EACVhE,UAAW,IAAIkE,QAChBpG,MAAM,WACLL,EAAS,CAACM,KAAM,cAAe4B,KAAMA,OACtCuD,OAAM,SAACC,GACN1F,EAAS,CAACM,KAAM,oBAAqBoF,IAAKA,QD2CZW,CAAcnE,QAIzCnC,CAA8CqG,GEzDvDM,G,wLAkBE,OADepD,KAAK/C,MAAbH,KACCyB,IAAY,kBAAC,IAAD,CAAUpB,GAAG,eAE7B,yBAAKgB,MAjBQ,CACbkF,OAAQ,mBACR7E,WAAY,uCAeYtB,UAAU,oBAC9B,yBAAKA,UAAU,OACX,wBAAIA,UAAU,eAAd,cAAuC,0BAAMiB,MAfnC,CAClBK,WAAY,4BACZN,SAAU,OACVO,WAAY,qBAYmC,gBAG3C,yBAAKvB,UAAU,yBAAyBiB,MAb9B,CACdmF,UAAW,OACXC,SAAU,UAWN,kC,GAzBQtD,cAsCTxD,eANS,SAAC2B,GACrB,MAAO,CACHtB,KAAMsB,EAAMC,SAASvB,QAIdL,CAAyB2G,GCXzBI,E,iLApBX,OACE,kBAAC,IAAD,KACI,yBAAKtG,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuG,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOM,KAAK,aAAaC,UAAW5D,IACpC,kBAAC,IAAD,CAAO2D,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAW1C,IACjC,kBAAC,IAAD,CAAOyC,KAAK,UAAUC,UAAWtB,IACjC,kBAAC,IAAD,CAAOqB,KAAK,eAAeC,UAAWb,W,GAZlC7C,aCEE4D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStD,MACvB,2DClBN,IAAMuD,EAAU,CACZvC,UAAW,MAqCAwC,EAlCK,WAA8B,IAA7B9F,EAA4B,uDAAtB6F,EAAYE,EAAU,uCAC7C,OAAOA,EAAOnH,MACV,IAAK,cAED,OADA6D,QAAQC,IAAI,eACL,eACA1C,EADP,CAEIsD,UAAW,iBAEnB,IAAK,gBAED,OADAb,QAAQC,IAAI,iBACL,eACA1C,EADP,CAEIsD,UAAW,OAEnB,IAAK,kBAED,OADAb,QAAQC,IAAI,mBACL1C,EACX,IAAK,iBAED,OADAyC,QAAQC,IAAI,kBACL,eACA1C,EADP,CAEIsD,UAAW,OAEnB,IAAK,eAED,OADAb,QAAQC,IAAI,gBACL,eACA1C,EADP,CAEIsD,UAAWyC,EAAO/B,IAAIgC,UAE9B,QACI,OAAOhG,IClCb6F,EAAU,CAEZ5E,MAAO,CACH,CAAChC,GAAG,IAAKwB,MAAQ,WAAYwF,OAAQ,UACrC,CAAChH,GAAG,IAAKwB,MAAQ,WAAYwF,OAAQ,UACrC,CAAChH,GAAG,IAAKwB,MAAQ,cAAewF,OAAQ,uBAiBjCC,EAbQ,WAA8B,IAA7BlG,EAA4B,uDAAtB6F,EAAYE,EAAU,uCAChD,OAAOA,EAAOnH,MACV,IAAK,cAED,OADA6D,QAAQC,IAAI,eAAgBqD,EAAOvF,MAC5BR,EACX,IAAK,oBAED,OADAyC,QAAQC,IAAI,sBAAuBqD,EAAO/B,KACnChE,EACX,QACI,OAAOA,I,QCLJmG,EAPKC,YAAgB,CAChC1H,KAAMoH,EACNO,QAASH,EACTnE,UAAWuE,mBACXrG,SAAUsG,oB,wCCMdtG,IAASuG,cAXY,CACjBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMJ/G,QAAf,ECLMgH,EAAQC,YACVf,EACArE,YACIqF,YAAgBC,IAAMC,kBAAkB,CAAEhD,4BAAc5F,6BACxD6I,yBAAerH,IAAUsH,KAQ3BC,EAAW,CACbvH,aACAwH,OAPc,CACdC,YAAa,QACbC,wBAAwB,EACxBC,cAAc,GAKdtJ,SAAU2I,EAAM3I,SAChBuJ,mDAGJC,IAASC,OACL,kBAAC,IAAD,CAAUd,MAAOA,GACb,kBAAC,6BAA+BO,EAC5B,kBAAC,EAAD,MADJ,MAIJQ,SAASC,eAAe,W","file":"static/js/main.1c1d3840.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/online-note-logo.e6e052cf.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {signOut} from \"../../store/actions/authAction\";\r\nimport {Modal} from \"react-materialize\";\r\nimport {SideNav} from \"react-materialize\";\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className=\"right hide-on-med-and-down\">\r\n                <li><NavLink to=\"/create-note\">Create New Note</NavLink></li>\r\n                <li><a onClick={props.signOut}>Log Out</a></li>\r\n                <li id=\"account-info-modal\">\r\n                    <Modal className=\"center\" header=\"Account Info\" trigger={<a to=\"/\" className=\"btn btn-floating\">{props.profile.initials}</a>}>\r\n                            <h5>LOGGED IN AT <span className=\"red-text accent-2\">{props.profile.firstName} {props.profile.lastName}</span></h5>\r\n                            <h5 className=\"red-text accent-2\">{props.auth.email}</h5>\r\n                    </Modal>\r\n                </li> \r\n            </ul>\r\n            <SideNav  trigger={<a href=\"#\"><i className=\"material-icons hide-on-large-only\">menu</i></a>} options={{ closeOnClick: true }}>\r\n                <ul>\r\n                    <li><NavLink to=\"/create-note\">Create New Note</NavLink></li>\r\n                    <li><a onClick={props.signOut}>Log Out</a></li>\r\n                    <li id=\"account-info-modal\">\r\n                        <Modal className=\"center\" header=\"Account Info\" trigger={<a to=\"/\" className=\"btn btn-floating\">{props.profile.initials}</a>}>\r\n                            <h5>LOGGED IN AT <span className=\"red-text accent-2\">{props.profile.firstName} {props.profile.lastName}</span></h5>\r\n                            <h5 className=\"red-text accent-2\">{props.auth.email}</h5>\r\n                        </Modal>\r\n                    </li> \r\n                </ul>\r\n            </SideNav>\r\n        </div>\r\n    );   \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() =>{\r\n            dispatch({type: \"LOGIN_SUCCESS\"})\r\n        }).catch((err)=>{\r\n            dispatch({type: \"LOGIN_ERROR\", err: err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase =getFirebase();\r\n        \r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: \"SIGNOUT_SUCCESS\"})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n        const firebase=getFirebase();\r\n        const firestore=getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((respond) => {\r\n            return firestore.collection(\"users\").doc(respond.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: \"SIGNUP_SUCCESS\"})\r\n        }).catch((err)=>{\r\n            dispatch({type: \"SIGNUP_ERROR\",err})\r\n        })\r\n    }\r\n    \r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {SideNav} from \"react-materialize\";\r\n\r\n\r\nconst SignedOutLinks = () => {\r\n    const titleStyle={\r\n        fontSize: \"20px\",\r\n    }\r\n    return (\r\n        <div>\r\n            <ul className=\"right hide-on-med-and-down\">\r\n                <li><NavLink to=\"/signin\"><span style={titleStyle}>Log In</span></NavLink></li>\r\n                <li><NavLink to=\"/signup\"><span style={titleStyle}>Sign Up</span></NavLink></li>\r\n            </ul>\r\n            \r\n            <SideNav  trigger={<a href=\"#\"><i className=\"material-icons hide-on-large-only\">menu</i></a>} options={{ closeOnClick: true }}>\r\n                <ul>\r\n                    <li><NavLink to=\"/signin\"><span style={titleStyle}>Log In</span></NavLink></li>\r\n                    <li><NavLink to=\"/signup\"><span style={titleStyle}>Sign Up</span></NavLink></li>\r\n                </ul>\r\n            </SideNav>\r\n        </div>\r\n        \r\n        \r\n    );   \r\n}\r\n\r\nexport default SignedOutLinks;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignOutLinks\";\r\nimport { connect } from \"react-redux\"\r\n\r\n\r\nconst Navbar = (props) => {\r\n    //style\r\n    const titleOnlineNote={\r\n        fontFamily: \"Tangerine,Frosty,Garamond\",\r\n        fontSize: \"38px\",\r\n        textShadow: \"4px 4px 4px #aaa\",\r\n    }\r\n\r\n    const {auth, profile} = props;\r\n    //console.log(auth)\r\n    const links = auth.uid ? <SignedInLinks profile={profile} auth={auth}/> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper purple lighten-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\" id=\"brand-logo\">  \r\n                    <i className=\"material-icons prefix\" style={{\"fontSize\": \"38px\"}}>event_note</i>\r\n                    <span style={titleOnlineNote}>OnlineNote</span>\r\n                </Link>\r\n                {auth.isLoaded && \r\n                    links\r\n                }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from \"react\";\r\nimport moment from \"moment\"\r\n\r\nconst ProjectSummary = ({note}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">{note.title}</span>\r\n                <p>Added by <span className=\"red-text accent-3\">{note.authorFirstName} {note.authorLastName}</span></p>\r\n                <p>{moment(note.createdAt.toDate()).format('LLLL')}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst ProjectList = ({notes}) => {\r\n    //console.log(notes);\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {notes && notes.map(note => {\r\n                return(\r\n                    <Link to={\"/project/\"+note.id} key={note.id}>\r\n                        <ProjectSummary note={note} />\r\n                    </Link>\r\n                ) \r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notification = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"notification section\">\r\n            <div className=\"card\">\r\n                <div className=\"card-title center\">Notifications</div>\r\n                <div className=\"card-content\">\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(notification => {\r\n                            return (\r\n                                <li key={notification.id}>\r\n                                    <span className=\"red-text\">{notification.user}</span>\r\n                                    <span> {notification.content}</span>\r\n                                    <div>\r\n                                        {moment(notification.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, {Component} from \"react\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport Notification from \"./Notificationd\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\"\r\nimport { compose } from \"redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        //console.log(this.props)\r\n        const {notes, auth, notifications}=this.props;\r\n        if(!auth.uid) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6 project-list\">\r\n                        <ProjectList notes={notes}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1 notification\">\r\n                        <Notification notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        notes: state.firestore.ordered.notes,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: \"notes\", orderBy: [\"createdAt\", \"desc\"]},\r\n        {collection: \"notifications\", limit :6, orderBy: [\"time\", \"desc\"]}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    console.log(props)\r\n    const {note, auth} = props;\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n    const handleClick = () => {\r\n        props.history.push(\"/dashboard\")\r\n    }\r\n    \r\n    if (note) {\r\n        return (      \r\n            <div className=\"container section\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{note.title}</span>\r\n                        <p>{note.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <p>Added by <span className=\"red-text accent-2\">{note.authorFirstName} {note.authorLastName}</span></p>\r\n                        <p>{moment(note.createdAt.toDate()).format('LLLL')}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container left\">\r\n                    <button className=\"btn btn-med purple lighten-3\" onClick={handleClick}> <i className=\"material-icons\">arrow_back</i> </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading note info...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (state, ownProps) =>{\r\n    const id = ownProps.match.params.id;\r\n    const notes = state.firestore.data.notes;\r\n    const note = notes ? notes[id] : null ;\r\n    return {\r\n        note: note,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: \"notes\"}\r\n    ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { signIn } from \"../../store/actions/authAction\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\n\r\nclass SignIn extends Component  {\r\n    state = {\r\n        \"email\": \"\",\r\n        \"password\": \"\"\r\n    }\r\n    handleChange= (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit= (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const {authError, auth}=this.props;\r\n        if(auth.uid) {return <Redirect to=\"/dashboard\" />}\r\n        else {\r\n            return (\r\n                <div className=\"container form-container\">\r\n                    <form className=\"white z-depth-5\" onSubmit={this.handleSubmit}>\r\n                        <h4>Log In</h4>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"material-icons prefix\">email</i>\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"material-icons prefix\">lock</i>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange} autoComplete=\"on\"/>                         \r\n                        </div>\r\n                        <div className=\"input-field center-align\">\r\n                            <button className=\"btn purple lighten-3 waves-effect waves-light\">Login\r\n                                <i className=\"material-icons\">pets</i>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"container red-text accent-2 center\">\r\n                            {authError ? <p>{authError}</p>:null}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n} \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { signUp } from \"../../store/actions/authAction\"\r\n\r\nclass SignUp extends Component  {\r\n    state = {\r\n        \"email\": \"\",\r\n        \"password\": \"\",\r\n        \"firstName\": \"\",\r\n        \"lastName\": \"\",\r\n    }\r\n    handleChange= (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit= (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const {auth, authError}=this.props;\r\n        if(auth.uid) {return <Redirect to=\"/dashboard\" />}\r\n        else {\r\n            return (\r\n                <div className=\"container form-container\">\r\n                    <form className=\"white z-depth-5\" onSubmit={this.handleSubmit}>\r\n                        <h4>Sign Up</h4>\r\n                        <div className=\"input-field\">\r\n                            <i class=\"material-icons prefix\">account_circle</i>\r\n                            <label htmlFor=\"firstName\">First Name</label>\r\n                            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"material-icons prefix\">supervised_user_circle</i>\r\n                            <label htmlFor=\"lastName\">Last Name</label>\r\n                            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"material-icons prefix\">email</i>\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"material-icons prefix\">lock</i>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                        </div>\r\n                        <div className=\"input-field center-align\">\r\n                            <button className=\"btn purple lighten-3 waves-effect waves-light\">Sign Up\r\n                                <i className=\"material-icons\">touch_app</i>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"container center red-text accent-2\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return {\r\n        signUp : (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { createProject } from \"../../store/actions/projectActions\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nclass CreateProject extends Component  {\r\n    state = {\r\n        \"title\": \"\",\r\n        \"content\": \"\"\r\n    }\r\n    handleChange= (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit= (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push(\"/dashboard\")\r\n    }\r\n    render() {\r\n        const {auth}=this.props;\r\n        if(!auth.uid) {\r\n            return <Redirect to=\"/signin\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h4>Create New Note</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea name=\"content\" id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field center-align\">\r\n                        <button className=\"btn purple lighten-3\">\r\n                            <i className=\"material-icons\">create</i>\r\n                            Add Note \r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (note) => dispatch(createProject(note))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(CreateProject)\r\n","export const createProject = (note) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make an async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection(\"notes\").add({\r\n            ...note,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then (()=>{\r\n            dispatch({type: \"CREATE_NOTE\", note: note})\r\n        }).catch((err)=>{\r\n            dispatch({type: \"CREATE_NOTE_ERROR\", err: err})\r\n        })\r\n        \r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport onlineNoteLogo from \"../../images/online-note-logo.png\"\r\n\r\nclass FrontPage extends Component {\r\n    render() {\r\n        //styles\r\n        const titleStyle={\r\n            margin: \"28vh auto 0 auto\",\r\n            fontFamily: \"Courier,Cursive,Charcoal,sans-serif\",\r\n        }\r\n        const titleOnlineNote={\r\n            fontFamily: \"Tangerine,Frosty,Garamond\",\r\n            fontSize: \"78px\",\r\n            textShadow: \"4px 4px 4px #aaa\",\r\n        }\r\n        const footerStyle={\r\n            marginTop: \"auto\",\r\n            position: \"fixed\"\r\n        }\r\n\r\n        const {auth} = this.props;\r\n        if(auth.uid) return <Redirect to=\"/dashboard\" />\r\n        return (\r\n            <div style={titleStyle} className=\"container center\">\r\n                <div className=\"row\">\r\n                    <h2 className=\"col m12 s12\">Welcome To <span style={titleOnlineNote}>OnlineNote</span></h2>\r\n                </div>\r\n                \r\n                <div className=\"container center-align\" style={footerStyle}>&copy; Made By Yuhiaht 2020</div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FrontPage)\r\n","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nimport FrontPage from \"./components/layout/FrontPage\";\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={FrontPage} />\n              <Route path=\"/dashboard\" component={Dashboard} />\n              <Route path=\"/project/:id\" component={ProjectDetails} />\n              <Route path=\"/signin\" component={SignIn} />\n              <Route path=\"/signup\" component={SignUp} />\n              <Route path=\"/create-note\" component={CreateProject} />\n            </Switch>\n            \n          </div>\n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState={\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state=initState , action) =>{\r\n    switch(action.type) {\r\n        case \"LOGIN_ERROR\":\r\n            console.log(\"login error\")\r\n            return {\r\n                ...state,\r\n                authError: \"Login failed\"\r\n            }\r\n        case \"LOGIN_SUCCESS\":\r\n            console.log(\"login success\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case \"SIGNOUT_SUCCESS\":\r\n            console.log(\"signout success\")\r\n            return state;\r\n        case \"SIGNUP_SUCCESS\":\r\n            console.log(\"signup success\");\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case \"SIGNUP_ERROR\":\r\n            console.log(\"signup error\")\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState={\r\n    //static data for test\r\n    notes: [\r\n        {id:\"1\", title : \"Marigold\", artist: \"Aimyon\"},\r\n        {id:\"2\", title : \"Mikazuki\", artist: \"Sayuri\"},\r\n        {id:\"3\", title : \"PON PON PON\", artist: \"Kyary Pamyu Pamyu\"},\r\n    ] \r\n} \r\n\r\nconst projectReducer = (state=initState , action) =>{\r\n    switch(action.type) {\r\n        case \"CREATE_NOTE\":\r\n            console.log(\"Created note\", action.note);\r\n            return state;\r\n        case \"CREATE_NOTE_ERROR\":\r\n            console.log(\"Create Note Error !\", action.err);\r\n            return state;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from \"./authReducer\"\r\nimport projectReducer from \"./projectReducer\"\r\nimport { combineReducers } from \"redux\"\r\nimport { firestoreReducer } from \"redux-firestore\"\r\nimport { firebaseReducer } from \"react-redux-firebase\"\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n\r\n// Initialize Firebase\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBCfxhPCyaAp7oHVDX9vX_nCGAWcQnbV-Q\",\r\n    authDomain: \"online-note-277b0.firebaseapp.com\",\r\n    databaseURL: \"https://online-note-277b0.firebaseio.com\",\r\n    projectId: \"online-note-277b0\",\r\n    storageBucket: \"online-note-277b0.appspot.com\",\r\n    messagingSenderId: \"264497772165\",\r\n    appId: \"1:264497772165:web:3188922fff9211667c5bec\",\r\n    measurementId: \"G-Z78CVH494V\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebase, fbConfig)\n    )\n);\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n    enableClaims: true // Get custom claims along with the profile\n  }\nconst rrfProps = {  \n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n};\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <App />,\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}