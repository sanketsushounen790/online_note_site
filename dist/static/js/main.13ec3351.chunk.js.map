{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notificationd.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","isLoaded","ProjectSummary","song","console","log","title","authorFirstName","authorLastName","moment","createdAt","toDate","format","ProjectList","songs","map","id","key","Notification","notifications","notification","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","autoComplete","creds","credentials","signInWithEmailAndPassword","email","password","catch","err","SignUp","signUp","newUser","getFirestore","createUserWithEmailAndPassword","respond","doc","set","firstName","lastName","CreateProject","createProject","history","push","name","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","artist","projectReducer","rootReducer","combineReducers","project","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableClaims","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13ec3351.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {signOut} from \"../../store/actions/authAction\";\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create-note\">Create New Note</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    );   \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() =>{\r\n            dispatch({type: \"LOGIN_SUCCESS\"})\r\n        }).catch((err)=>{\r\n            dispatch({type: \"LOGIN_ERROR\", err: err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase =getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: \"SIGNOUT_SUCCESS\"})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n        const firebase=getFirebase();\r\n        const firestore=getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((respond) => {\r\n            return firestore.collection(\"users\").doc(respond.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: \"SIGNUP_SUCCESS\"})\r\n        }).catch((err)=>{\r\n            dispatch({type: \"SIGNUP_ERROR\",err})\r\n        })\r\n    }\r\n    \r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\r\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n        </ul>\r\n    );   \r\n}\r\n\r\nexport default SignedOutLinks;","import React from \"react\";\r\nimport {Link, NavLink, withRouter} from 'react-router-dom';\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignOutLinks\";\r\nimport { connect } from \"react-redux\"\r\n\r\nconst Navbar = (props) => {\r\n    const {auth, profile} = props;\r\n    //console.log(auth)\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper purple lighten-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo left\">Yuhiaht</Link>\r\n                {auth.isLoaded && \r\n                    links\r\n                }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from \"react\";\r\nimport moment from \"moment\"\r\n\r\nconst ProjectSummary = ({song}) => {\r\n    console.log(song)\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">{song.title}</span>\r\n                <p>Added by <span className=\"red-text accent-3\">{song.authorFirstName} {song.authorLastName}</span></p>\r\n                <p>{moment(song.createdAt.toDate()).format('LLLL')}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst ProjectList = ({songs}) => {\r\n    //console.log(songs);\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {songs && songs.map(song => {\r\n                return(\r\n                    <Link to={\"/project/\"+song.id} key={song.id}>\r\n                        <ProjectSummary song={song} />\r\n                    </Link>\r\n                ) \r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notification = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"notification section\">\r\n            <div className=\"card\">\r\n                <div className=\"card-title center\">Notifications</div>\r\n                <div className=\"card-content\">\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(notification => {\r\n                            return (\r\n                                <li key={notification.id}>\r\n                                    <span className=\"red-text\">{notification.user}</span>\r\n                                    <span> {notification.content}</span>\r\n                                    <div>\r\n                                        {moment(notification.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, {Component} from \"react\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport Notification from \"./Notificationd\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\"\r\nimport { compose } from \"redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        //console.log(this.props)\r\n        const {songs, auth, notifications}=this.props;\r\n        if(!auth.uid) {\r\n            return <Redirect to=\"/signin\"/>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6 project-list\">\r\n                        <ProjectList songs={songs}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1 notification\">\r\n                        <Notification notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state)\r\n    return {\r\n        songs: state.firestore.ordered.songs,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: \"songs\", orderBy: [\"createdAt\", \"desc\"]},\r\n        {collection: \"notifications\", limit :3, orderBy: [\"time\", \"desc\"]}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {song, auth} = props;\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    \r\n    if (song) {\r\n        return (      \r\n            <div className=\"container section\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{song.title}</span>\r\n                        <p>{song.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <p>Added by <span className=\"red-text accent-2\">{song.authorFirstName} {song.authorLastName}</span></p>\r\n                        <p>{moment(song.createdAt.toDate()).format('LLLL')}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading song info...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (state, ownProps) =>{\r\n    const id = ownProps.match.params.id;\r\n    const songs = state.firestore.data.songs;\r\n    const song = songs ? songs[id] : null ;\r\n    return {\r\n        song: song,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: \"songs\"}\r\n    ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { signIn } from \"../../store/actions/authAction\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\n\r\nclass SignIn extends Component  {\r\n    state = {\r\n        \"email\": \"\",\r\n        \"password\": \"\"\r\n    }\r\n    handleChange= (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit= (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const {authError, auth}=this.props;\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n             \r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5>Log In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn purple lighten-3\">Login</button>\r\n                    </div>\r\n                    <div className=\"container red-text accent-2 center\">\r\n                        {authError ? <p>{authError}</p>:null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n} \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { signUp } from \"../../store/actions/authAction\"\r\n\r\nclass SignUp extends Component  {\r\n    state = {\r\n        \"email\": \"\",\r\n        \"password\": \"\",\r\n        \"firstName\": \"\",\r\n        \"lastName\": \"\",\r\n    }\r\n    handleChange= (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit= (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const {auth, authError}=this.props;\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5>Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn purple lighten-3\">Login</button>\r\n                    </div>\r\n                    <div className=\"container center red-text accent-2\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return {\r\n        signUp : (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { createProject } from \"../../store/actions/projectActions\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nclass CreateProject extends Component  {\r\n    state = {\r\n        \"title\": \"\",\r\n        \"content\": \"\"\r\n    }\r\n    handleChange= (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit= (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push(\"/\")\r\n    }\r\n    render() {\r\n        const {auth}=this.props;\r\n        if(!auth.uid) {\r\n            return <Redirect to=\"/signin\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5>Create Song</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} autoComplete=\"on\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Note Content</label>\r\n                        <textarea name=\"content\" id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn purple lighten-3\">Add Note</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (song) => dispatch(createProject(song))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(CreateProject)\r\n","export const createProject = (song) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make an async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection(\"songs\").add({\r\n            ...song,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then (()=>{\r\n            dispatch({type: \"CREATE_SONG\", song: song})\r\n        }).catch((err)=>{\r\n            dispatch({type: \"CREATE_SONG_ERROR\", err: err})\r\n        })\r\n        \r\n    }\r\n}","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={Dashboard} />\n              <Route path=\"/project/:id\" component={ProjectDetails} />\n              <Route path=\"/signin\" component={SignIn} />\n              <Route path=\"/signup\" component={SignUp} />\n              <Route path=\"/create-note\" component={CreateProject} />\n            </Switch>\n            \n          </div>\n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState={\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state=initState , action) =>{\r\n    switch(action.type) {\r\n        case \"LOGIN_ERROR\":\r\n            console.log(\"login error\")\r\n            return {\r\n                ...state,\r\n                authError: \"Login failed\"\r\n            }\r\n        case \"LOGIN_SUCCESS\":\r\n            console.log(\"login success\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case \"SIGNOUT_SUCCESS\":\r\n            console.log(\"signout success\")\r\n            return state;\r\n        case \"SIGNUP_SUCCESS\":\r\n            console.log(\"signup success\");\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case \"SIGNUP_ERROR\":\r\n            console.log(\"signup error\")\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState={\r\n    songs: [\r\n        {id:\"1\", title : \"Marigold\", artist: \"Aimyon\"},\r\n        {id:\"2\", title : \"Mikazuki\", artist: \"Sayuri\"},\r\n        {id:\"3\", title : \"PON PON PON\", artist: \"Kyary Pamyu Pamyu\"},\r\n    ] \r\n} \r\n\r\nconst projectReducer = (state=initState , action) =>{\r\n    switch(action.type) {\r\n        case \"CREATE_SONG\":\r\n            console.log(\"Created Song\", action.song);\r\n            return state;\r\n        case \"CREATE_SONG_ERROR\":\r\n            console.log(\"Create Song Error !\", action.err);\r\n            return state;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from \"./authReducer\"\r\nimport projectReducer from \"./projectReducer\"\r\nimport { combineReducers } from \"redux\"\r\nimport { firestoreReducer } from \"redux-firestore\"\r\nimport { firebaseReducer } from \"react-redux-firebase\"\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n\r\n// Initialize Firebase\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBCfxhPCyaAp7oHVDX9vX_nCGAWcQnbV-Q\",\r\n    authDomain: \"online-note-277b0.firebaseapp.com\",\r\n    databaseURL: \"https://online-note-277b0.firebaseio.com\",\r\n    projectId: \"online-note-277b0\",\r\n    storageBucket: \"online-note-277b0.appspot.com\",\r\n    messagingSenderId: \"264497772165\",\r\n    appId: \"1:264497772165:web:3188922fff9211667c5bec\",\r\n    measurementId: \"G-Z78CVH494V\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebase, fbConfig)\n    )\n);\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n    enableClaims: true // Get custom claims along with the profile\n  }\nconst rrfProps = {  \n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n};\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <App />\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}